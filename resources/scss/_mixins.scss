
@use "sass:map";


@mixin v-divider-after($marginRight: 0px, $color :white, $width: 1px, $opacity: 0.2, $style:solid, $height: 100%){
    content:'';
    border-left: $style $color $width;
    height: $height;
    opacity: $opacity;
    margin-right: $marginRight;
}
@mixin v-divider-before($marginLeft: 0px, $color :white, $width: 1px, $opacity: 0.2, $style:solid, $height: 100%){

    content:'';
    border-left: $style $color $width;
    height: $height;
    opacity: $opacity;
    margin-left: $marginLeft;
}


@mixin hd{
    @media only screen and (min-width: 1920px) { @content; }
}
@mixin xxxl{
    @media only screen and (min-width: 1600px) { @content; }
}
@mixin xxl{
    @media only screen and (min-width: 1400px) { @content; }
}
@mixin xl{
    @media only screen and (min-width: 1200px) { @content; }
}
@mixin lg{
    @media only screen and (min-width: 992px) { @content; }
}
@mixin md{
    @media only screen and (min-width: 768px) { @content; }
}
@mixin sm{
    @media only screen and (min-width: 576px) { @content; }
}
@mixin xs{
    @media only screen and (min-width: 414px) { @content; }
}
@mixin xxs{
    @media only screen and (min-width: 320px) { @content; }
}
@mixin l-hd{
    @media only screen and (max-width: 1919px) { @content; }
}
@mixin l-xxxl{
    @media only screen and (max-width: 1599px) { @content; }
}
@mixin l-xxl{
    @media only screen and (max-width: 1399px) { @content; }
}
@mixin l-xl{
    @media only screen and (max-width: 1199px) { @content; }
}
@mixin l-lg{
    @media only screen and (max-width: 991px) { @content; }
}
@mixin l-md{
    @media only screen and (max-width: 767px) { @content; }
}
@mixin l-sm{
    @media only screen and (max-width: 575px) { @content; }
}
@mixin l-xs{
    @media only screen and (max-width: 413px) { @content; }
}
@mixin l-xxs{
    @media only screen and (max-width: 319px) { @content; }
}

@mixin social_btn($bg, $fore, $border){
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    padding: 0px 15px 0px 65px;
    text-align: center;
    min-height: 50px;
    position: relative;
    color: $fore;
    background: $bg;
    font-family: Stem, Arial, sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 16px;
    line-height: 50px;
    outline: none;
    border: none;
    &::before{
        position: absolute;
        content: '';
        left: 25px;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
    }
    &::after{
        content: '';
        position: absolute;
        left: 50px;
        top: 0;
        width: 1px;
        height: 100%;
        background-color: $border;
    }
    &:hover{
        color: $fore;
        text-decoration: none;
        background: radial-gradient(50% 100% at 50% 0%, rgba(255, 255, 255, 0.75) 0%, rgba(255, 255, 255, 0) 100%), $bg;
        background-blend-mode: soft-light, normal;
    }
    &:active{
        color: $fore;
        text-decoration: none;
        background: radial-gradient(50% 100% at 50% 0%, rgba(29, 41, 52, 0.75) 0%, rgba(29, 41, 52, 0) 100%), $bg;
        background-blend-mode: soft-light, normal;
    }
}

@mixin bg_static($url: white, $height:auto, $width: auto, $pos:center, $maxHeight:unset){
    background: $url no-repeat $pos;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    height: $height;
    min-height: $height;
    width: $width;
    max-height: $maxHeight;
}

@mixin link($color:white, $hover:white, $active:white,
        $decoration:none, $hoverDecoration:none, $activeDecoration:none){
    color:$color;
    text-decoration: $decoration;
    transition: color 0.2s ease-in-out;
    &:hover{
        color: $hover;
        text-decoration: $hoverDecoration;
    }
    &:active{
        color: $active;
        text-decoration: $activeDecoration;
    }
}

@mixin absolute($top: unset, $left:unset, $bottom:unset, $right:unset,
    $width: auto, $height: auto, $zIndex:unset){
    position: absolute;
    @if($top != unset) {
        top: $top;
    }
    @if($left != unset) {
        left: $left;
    }
    @if($bottom != unset) {
        bottom: $bottom;
    }
    @if($right != unset) {
        right: $right;
    }
    width: $width;
    height: $height;
    @if($zIndex != unset) {
        z-index: $zIndex;
    }
}

@mixin overlay($bg:rgba(0,0,0,0.4)){
    @include absolute($width:100%, $height:100%, $top:0, $left: 0);
    background: $bg;
}

@mixin wrapper($height: 0, $width: $contentWidth, $min-height:0,$nopadding:false){
    max-width: $width;
    width: 100%;
    @if($height != 0) {
        height: $height;
    }
    @if($min-height != 0) {
        min-height: $min-height;
    }
    margin: 0 auto;
    @if($nopadding == false) {
        @include l-xxl {
            padding-left: 10px;
            padding-right: 10px;
        }
    }
    @include l-lg{
        max-width: 100%;
    }
}

@mixin no-outline{
    &:active, &hover, &:focus{
        outline: none;
    }
}

@mixin ui-shadow-small{
    box-shadow: 0 3px 6px rgb(0 0 0 / 18%);
}
@mixin ui-shadow{
    box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
}
@mixin ui-shadow-white{
    box-shadow: 0 6px 12px rgba(255, 255, 255, 0.18);
}
@mixin ui-shadow-big{
    box-shadow: 0 8px 16px rgb(0 0 0 / 28%);
}
@mixin ui-transition{
    transition: $defaultTransition;
}

@mixin scrollable($width: 5px) {
    overflow-y: scroll;
    scrollbar-gutter: stable;
    &::-webkit-scrollbar{
        width: $width;
        //position: absolute;
        //right: 0;
        //height: 100%;
    }
    &::-webkit-scrollbar-track {
        background-color: lightgrey;
    }
    &::-webkit-scrollbar-thumb {
        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.7);
    }
}
.ui-scrollable{
    @include scrollable;
}

@keyframes floating-bar-button-blink {
    0%{
        opacity: 1;
    }
    33%{
        opacity:0;
        transform: scale(160%);
    }
    100%{
        opacity:0;
        transform: scale(160%);
    }
}
@mixin floating-bar-button($color, $textColor:$color,){
    color:$textColor;
    border: 2px solid $color;
    transition: $defaultTransition;
    border-radius: 6px;
    position: relative;
    z-index: 1100;
    outline: none;
    cursor: pointer;
    box-sizing: content-box;
    background: white;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 48px;
    height: 48px;
    padding:0;
    margin:0;
    opacity: 0.85;
    backdrop-filter: blur(4px);
    &:hover{
        opacity: 1;
    }
    &:after{
        content:'';
        position: absolute;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        top:-2px;
        left:-2px;
        border: 2px solid $color;
        border-radius: 6px;
        background: transparent;
        z-index: 900;
    }
    &.animated {
        &:after{

            animation: floating-bar-button-blink;
            animation-timing-function: ease-out;
            animation-iteration-count: infinite;
            animation-duration: 3s;
        }
        &.animated-delay-500{
            &:after{
                animation-delay: 500ms;
            }
        }
        &.animated-delay-1000{
            &:after{
                animation-delay: 1000ms;
            }
        }
    }
    @include l-md{
        width: 32px;
        height: 32px;
    }
}

$animatedEnterDirections: (
    "left": (-10%),
    "top": (-10%),
    "right": 10%,
    "bottom": 10%,
    "none": 0,
);
@mixin animated-enter($directionX:'left',$directionY:'top',$intensityX:5,$intensityY:0,
    $opacity:0, $time:2s,$ease:ease-out){
    $x: map.get($animatedEnterDirections, $directionX) * $intensityX;
    $y: map.get($animatedEnterDirections, $directionY) * $intensityY;
    transform: translate($x, $y);
    opacity: $opacity;
    transition: all $time $ease;

    &.shown{
        opacity: 1;
        transform: translateX(0);
    }
}
